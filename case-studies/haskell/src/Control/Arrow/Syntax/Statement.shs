module Control.Arrow.Syntax.Statement where

context-free syntax
  "let" HaskellDeclbinds -> ArrStmt {cons("ArrLetStmt")}
  HaskellPat "<-" ArrCommand -> ArrStmt {cons("ArrBindStmt")}
  ArrCommand -> ArrStmt {cons("ArrCmdStmt")}

context-free syntax
  "{" ArrExplStmtList "}" -> ArrStmtList {cons("ArrStmtList"), ignore-layout}
  ArrImplStmtList   -> ArrStmtList {cons("ArrStmtList")}

context-free syntax
  ArrStmt -> ArrExplStmtList
  ArrStmt ";" ArrExplStmtList -> ArrExplStmtList {cons("ArrStmtSeq")}

  ArrStmt -> ArrImplStmt {layout(1.first.col < 1.left.col)}

  ArrImplStmt -> ArrImplStmtList
  ArrImplStmt ArrImplStmtList -> ArrImplStmtList
   {cons("ArrStmtSeq"), layout(1.first.col == 2.first.col)}
